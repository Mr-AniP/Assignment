/* Generated by Yosys 0.37+27 (git sha1 ebf6128d9, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* top =  1  *)
(* src = "fsm.v:1.1-232.10" *)
module vdf_2_fsm(clk, rst, in, out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  (* src = "fsm.v:2.16-2.19" *)
  input clk;
  wire clk;
  (* src = "fsm.v:4.22-4.24" *)
  input [1:0] in;
  wire [1:0] in;
  (* src = "fsm.v:10.11-10.20" *)
  wire [2:0] new_state;
  (* src = "fsm.v:5.23-5.26" *)
  output [1:0] out;
  wire [1:0] out;
  (* src = "fsm.v:9.11-9.16" *)
  wire [1:0] outer;
  (* src = "fsm.v:8.11-8.17" *)
  wire [1:0] outery;
  (* src = "fsm.v:3.16-3.19" *)
  input rst;
  wire rst;
  (* src = "fsm.v:7.11-7.16" *)
  wire [2:0] state;
  INV_X1 _059_ (
    .A(in[0]),
    .ZN(_006_)
  );
  INV_X1 _060_ (
    .A(in[1]),
    .ZN(_007_)
  );
  INV_X1 _061_ (
    .A(state[1]),
    .ZN(_008_)
  );
  INV_X1 _062_ (
    .A(state[0]),
    .ZN(_009_)
  );
  INV_X1 _063_ (
    .A(state[2]),
    .ZN(_010_)
  );
  INV_X1 _064_ (
    .A(rst),
    .ZN(_001_)
  );
  NOR2_X1 _065_ (
    .A1(in[0]),
    .A2(in[1]),
    .ZN(_011_)
  );
  NAND3_X1 _066_ (
    .A1(state[1]),
    .A2(_009_),
    .A3(state[2]),
    .ZN(_012_)
  );
  OAI211_X1 _067_ (
    .A(state[1]),
    .B(state[2]),
    .C1(state[0]),
    .C2(_006_),
    .ZN(_013_)
  );
  OR2_X1 _068_ (
    .A1(_011_),
    .A2(_013_),
    .ZN(_014_)
  );
  NAND2_X1 _069_ (
    .A1(in[0]),
    .A2(in[1]),
    .ZN(_015_)
  );
  XNOR2_X1 _070_ (
    .A(in[0]),
    .B(in[1]),
    .ZN(_016_)
  );
  INV_X1 _071_ (
    .A(_016_),
    .ZN(_017_)
  );
  AND3_X1 _072_ (
    .A1(state[1]),
    .A2(_009_),
    .A3(_000_),
    .ZN(_018_)
  );
  OR2_X1 _073_ (
    .A1(state[1]),
    .A2(state[0]),
    .ZN(_019_)
  );
  OAI21_X1 _074_ (
    .A(_000_),
    .B1(state[0]),
    .B2(state[1]),
    .ZN(_020_)
  );
  AND2_X1 _075_ (
    .A1(_010_),
    .A2(_020_),
    .ZN(_021_)
  );
  NAND2_X1 _076_ (
    .A1(_008_),
    .A2(state[0]),
    .ZN(_022_)
  );
  NAND2_X1 _077_ (
    .A1(in[0]),
    .A2(_007_),
    .ZN(_023_)
  );
  OAI21_X1 _078_ (
    .A(state[2]),
    .B1(in[1]),
    .B2(_006_),
    .ZN(_024_)
  );
  NOR3_X1 _079_ (
    .A1(state[1]),
    .A2(_009_),
    .A3(_010_),
    .ZN(_025_)
  );
  NOR2_X1 _080_ (
    .A1(_010_),
    .A2(_019_),
    .ZN(_026_)
  );
  AOI22_X1 _081_ (
    .A1(_023_),
    .A2(_025_),
    .B1(_026_),
    .B2(_015_),
    .ZN(_027_)
  );
  NAND3_X1 _082_ (
    .A1(state[1]),
    .A2(state[0]),
    .A3(_000_),
    .ZN(_028_)
  );
  NOR2_X1 _083_ (
    .A1(_015_),
    .A2(_028_),
    .ZN(_029_)
  );
  AND3_X1 _084_ (
    .A1(_008_),
    .A2(state[0]),
    .A3(_000_),
    .ZN(_030_)
  );
  NAND3_X1 _085_ (
    .A1(_008_),
    .A2(state[0]),
    .A3(_000_),
    .ZN(_031_)
  );
  NAND3_X1 _086_ (
    .A1(_010_),
    .A2(_015_),
    .A3(_020_),
    .ZN(_032_)
  );
  NAND2_X1 _087_ (
    .A1(_016_),
    .A2(_018_),
    .ZN(_033_)
  );
  AOI221_X1 _088_ (
    .A(_029_),
    .B1(_030_),
    .B2(in[1]),
    .C1(_017_),
    .C2(_021_),
    .ZN(_034_)
  );
  NAND4_X1 _089_ (
    .A1(_014_),
    .A2(_027_),
    .A3(_033_),
    .A4(_034_),
    .ZN(new_state[0])
  );
  AOI21_X1 _090_ (
    .A(_028_),
    .B1(_007_),
    .B2(in[0]),
    .ZN(_035_)
  );
  AOI221_X1 _091_ (
    .A(_035_),
    .B1(_018_),
    .B2(in[1]),
    .C1(in[0]),
    .C2(_030_),
    .ZN(_036_)
  );
  NAND3_X1 _092_ (
    .A1(in[0]),
    .A2(in[1]),
    .A3(_021_),
    .ZN(_037_)
  );
  NOR2_X1 _093_ (
    .A1(_007_),
    .A2(_010_),
    .ZN(_038_)
  );
  OAI211_X1 _094_ (
    .A(_008_),
    .B(state[2]),
    .C1(_009_),
    .C2(in[1]),
    .ZN(_039_)
  );
  OR2_X1 _095_ (
    .A1(_011_),
    .A2(_039_),
    .ZN(_040_)
  );
  OAI211_X1 _096_ (
    .A(state[1]),
    .B(state[2]),
    .C1(_023_),
    .C2(state[0]),
    .ZN(_041_)
  );
  NAND4_X1 _097_ (
    .A1(_036_),
    .A2(_037_),
    .A3(_040_),
    .A4(_041_),
    .ZN(new_state[1])
  );
  NOR2_X1 _098_ (
    .A1(in[0]),
    .A2(_007_),
    .ZN(_042_)
  );
  NAND2_X1 _099_ (
    .A1(_021_),
    .A2(_042_),
    .ZN(_043_)
  );
  OR2_X1 _100_ (
    .A1(_016_),
    .A2(_028_),
    .ZN(_044_)
  );
  OAI21_X1 _101_ (
    .A(state[2]),
    .B1(_022_),
    .B2(_023_),
    .ZN(_045_)
  );
  NAND4_X1 _102_ (
    .A1(_007_),
    .A2(state[1]),
    .A3(_009_),
    .A4(_000_),
    .ZN(_046_)
  );
  NAND4_X1 _103_ (
    .A1(_043_),
    .A2(_044_),
    .A3(_045_),
    .A4(_046_),
    .ZN(new_state[2])
  );
  NAND4_X1 _104_ (
    .A1(_006_),
    .A2(state[1]),
    .A3(state[0]),
    .A4(state[2]),
    .ZN(_047_)
  );
  OR3_X1 _105_ (
    .A1(in[0]),
    .A2(_010_),
    .A3(_019_),
    .ZN(_048_)
  );
  OAI211_X1 _106_ (
    .A(_046_),
    .B(_048_),
    .C1(_012_),
    .C2(_042_),
    .ZN(_049_)
  );
  AOI21_X1 _107_ (
    .A(in[1]),
    .B1(_031_),
    .B2(_047_),
    .ZN(_050_)
  );
  OAI211_X1 _108_ (
    .A(_028_),
    .B(_032_),
    .C1(_022_),
    .C2(_024_),
    .ZN(_051_)
  );
  OR3_X1 _109_ (
    .A1(_049_),
    .A2(_050_),
    .A3(_051_),
    .ZN(outer[0])
  );
  OR2_X1 _110_ (
    .A1(_006_),
    .A2(_012_),
    .ZN(_052_)
  );
  NAND4_X1 _111_ (
    .A1(state[1]),
    .A2(state[0]),
    .A3(state[2]),
    .A4(_016_),
    .ZN(_053_)
  );
  AOI211_X1 _112_ (
    .A(_030_),
    .B(_035_),
    .C1(_038_),
    .C2(_008_),
    .ZN(_054_)
  );
  NAND4_X1 _113_ (
    .A1(_043_),
    .A2(_052_),
    .A3(_053_),
    .A4(_054_),
    .ZN(outer[1])
  );
  INV_X1 _114_ (
    .A(rst),
    .ZN(_002_)
  );
  INV_X1 _115_ (
    .A(rst),
    .ZN(_003_)
  );
  INV_X1 _116_ (
    .A(rst),
    .ZN(_004_)
  );
  INV_X1 _117_ (
    .A(rst),
    .ZN(_005_)
  );
  (* src = "fsm.v:11.1-23.8" *)
  DFFR_X1 _118_ (
    .CK(clk),
    .D(new_state[0]),
    .Q(state[0]),
    .QN(_058_),
    .RN(_001_)
  );
  (* src = "fsm.v:11.1-23.8" *)
  DFFR_X1 _119_ (
    .CK(clk),
    .D(new_state[1]),
    .Q(state[1]),
    .QN(_057_),
    .RN(_002_)
  );
  (* src = "fsm.v:11.1-23.8" *)
  DFFR_X1 _120_ (
    .CK(clk),
    .D(new_state[2]),
    .Q(state[2]),
    .QN(_000_),
    .RN(_003_)
  );
  (* src = "fsm.v:11.1-23.8" *)
  DFFR_X1 _121_ (
    .CK(clk),
    .D(outer[0]),
    .Q(outery[0]),
    .QN(_056_),
    .RN(_004_)
  );
  (* src = "fsm.v:11.1-23.8" *)
  DFFR_X1 _122_ (
    .CK(clk),
    .D(outer[1]),
    .Q(outery[1]),
    .QN(_055_),
    .RN(_005_)
  );
  assign out = outery;
endmodule
